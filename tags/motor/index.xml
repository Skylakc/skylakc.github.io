<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Motor on Skylake&#39;s Blog</title>
        <link>https://skylakc.github.io/tags/motor/</link>
        <description>Recent content in Motor on Skylake&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Thu, 11 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://skylakc.github.io/tags/motor/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>First look at the world of electric drives</title>
        <link>https://skylakc.github.io/p/first-look-at-the-world-of-electric-drives/</link>
        <pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://skylakc.github.io/p/first-look-at-the-world-of-electric-drives/</guid>
        <description>&lt;img src="https://skylakc.github.io/p/first-look-at-the-world-of-electric-drives/wave.jpg" alt="Featured image of post First look at the world of electric drives" /&gt;&lt;p&gt;During my middle school years, I was introduced to model aviation. This is a type of aeromodeling that is powered by electric motors, mainly brushless motors. As my skills grew, I kept trying to make my own brushless motor drivers.&lt;/p&gt;
&lt;img src=plane.jpg width=60% /&gt;
&lt;h2 id=&#34;beginning&#34;&gt;Beginning&lt;/h2&gt;
&lt;img src=driver3.jpg width=60% /&gt;
&lt;p&gt;In fact, BLDC is driven by a simple, six-tap commutation method. Essentially BLDC is turning the commutator of a brushed DC motor into an electronic switch.&lt;/p&gt;
&lt;img src=UVW1.jpg width=60% /&gt;
&lt;p&gt;Very quickly, I made my own driver using a microcontroller.&lt;/p&gt;
&lt;img src=UVW2.jpg width=60% /&gt;
&lt;h2 id=&#34;development&#34;&gt;Development&lt;/h2&gt;
&lt;p&gt;Then after that, I discovered the TI C2000 series microcontroller&amp;rsquo;s motor drive function library and PMSM motors. the FOC algorithm can bring infinite possibilities to motor drive.&lt;/p&gt;
&lt;p&gt;So I built a motor lab platform. It was a 57 stepper motor plus an AMT102 optical encoder.&lt;/p&gt;
&lt;img src=driver5.jpg width=60% /&gt;
&lt;p&gt;Then MEMS technology-enabled magnetic encoders started to roll out in large numbers, and I ported the drive algorithms to an ST microcontroller, swapping out the optical encoder for a radial magnet-based magnetic encoder. Eventually a small motor driver board was made.&lt;/p&gt;
&lt;img src=driver1.jpg width=60% /&gt;
&lt;img src=driver2.jpg width=60% /&gt;
&lt;img src=driver4.jpg width=60% /&gt;
&lt;p&gt;Now, motors based on FOC control technology run in all the places in my house that need a motor drive, including my fish tank water pump, computer water pump, air conditioning inverter compressor, fresh air fan and so on.&lt;/p&gt;
&lt;p&gt;I developed variety of driver board to control these motors. (Some of them are sensorless which works in a light load)&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Universal Driver</title>
        <link>https://skylakc.github.io/p/universal-driver/</link>
        <pubDate>Sun, 13 Mar 2022 00:00:00 +0000</pubDate>
        
        <guid>https://skylakc.github.io/p/universal-driver/</guid>
        <description>&lt;img src="https://skylakc.github.io/p/universal-driver/stm.jpg" alt="Featured image of post Universal Driver" /&gt;&lt;h1 id=&#34;developing&#34;&gt;Developing&amp;hellip;.&lt;/h1&gt;
&lt;p&gt;Ready to implement a modular general-purpose motor driver with support for various algorithms, complete protection, multiple sensors, with signal outputs and oscilloscope&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Isolated Op Amps&lt;/p&gt;
&lt;p&gt;Isolated Power Supplies&lt;/p&gt;
&lt;p&gt;as2s1210&lt;/p&gt;
&lt;p&gt;ad7401 (bus voltage three phase current)&lt;/p&gt;
&lt;p&gt;zynq&lt;/p&gt;
&lt;p&gt;Input voltage 10-60&lt;/p&gt;
&lt;p&gt;Input current 80a&lt;/p&gt;
&lt;p&gt;3.3v20a capacity (test pw22 and zxd10)&lt;/p&gt;
&lt;p&gt;5v8a capacity&lt;/p&gt;
&lt;p&gt;tlv62130tps51200 quad power and ddr&lt;/p&gt;
&lt;p&gt;rtl8211 network phy two&lt;/p&gt;
&lt;p&gt;ft2232 jtag&lt;/p&gt;
&lt;p&gt;max232 rs232 architecture&lt;/p&gt;
&lt;p&gt;Isolated can?&lt;/p&gt;
&lt;p&gt;hdmi phy?&lt;/p&gt;
&lt;p&gt;Connector&lt;/p&gt;
&lt;p&gt;Differential Encoder Receive&lt;/p&gt;
&lt;p&gt;Encoder Input Optical Isolation&lt;/p&gt;
&lt;p&gt;Reserve rotary position&lt;/p&gt;
&lt;p&gt;encoder signal input mux&lt;/p&gt;
&lt;p&gt;cpld12 line pwm protection&lt;/p&gt;
&lt;p&gt;ad7124-8 temperature phase voltage bus voltage&lt;/p&gt;
&lt;p&gt;ad7124&lt;/p&gt;
&lt;p&gt;stm32 function&lt;/p&gt;
&lt;p&gt;Four-way voltage protection All four outputs leave a test point&lt;/p&gt;
&lt;p&gt;bus voltage protection (bus voltage resistor network after leaving the test point to connect two voltage followers one into the cpu, one into the south bridge to leave the test point) (bus voltage small power board with pmos, high power with AC contactor)&lt;/p&gt;
&lt;p&gt;Temperature protection (read 7124)&lt;/p&gt;
&lt;p&gt;hard overcurrent protection with a comparator opamp, the stm32 output pwm through the second-order filters
(later these functional requirements are realized with fpga, the protection logic is not involved in the software)&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
